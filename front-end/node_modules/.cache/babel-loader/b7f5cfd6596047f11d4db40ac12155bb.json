{"ast":null,"code":"export const initialState = {\n  basket: []\n}; //Selector : \"Here it is used to calculate total price\"\n\nexport const getBasketTotal = basket => {\n  return basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => amount + item.price, 0);\n};\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case \"REMOVE_FROM_BASKET\":\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Can't remove product (id: ${action.id}) as it does not exist in the basket`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/yash/Desktop/Clones/ecomm/front-end/src/reducer.js"],"names":["initialState","basket","getBasketTotal","reduce","amount","item","price","reducer","state","action","console","log","type","index","findIndex","basketItem","id","newBasket","splice","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE;AADkB,CAArB,C,CAIP;;AACA,OAAO,MAAMC,cAAc,GAAID,MAAD,IAAY;AACxC,SAAOA,MAAP,aAAOA,MAAP,uBAAOA,MAAM,CAAEE,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBD,MAAM,GAAGC,IAAI,CAACC,KAA/C,EAAsD,CAAtD,CAAP;AACD,CAFM;;AAGP,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,eAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELP,QAAAA,MAAM,EAAE,CAAC,GAAGO,KAAK,CAACP,MAAV,EAAkBQ,MAAM,CAACJ,IAAzB;AAFH,OAAP;;AAIF,SAAK,oBAAL;AACE,YAAMQ,KAAK,GAAGL,KAAK,CAACP,MAAN,CAAaa,SAAb,CACXC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBP,MAAM,CAACO,EAD7B,CAAd;AAGA,UAAIC,SAAS,GAAG,CAAC,GAAGT,KAAK,CAACP,MAAV,CAAhB;;AAEA,UAAIY,KAAK,IAAI,CAAb,EAAgB;AACdI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAwB,CAAxB;AACD,OAFD,MAEO;AACLH,QAAAA,OAAO,CAACS,IAAR,CACG,6BAA4BV,MAAM,CAACO,EAAG,sCADzC;AAGD;;AAED,aAAO,EACL,GAAGR,KADE;AAELP,QAAAA,MAAM,EAAEgB;AAFH,OAAP;;AAKF;AACE,aAAOT,KAAP;AA1BJ;AA4BD,CA9BD;;AAgCA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n  basket: [],\n};\n\n//Selector : \"Here it is used to calculate total price\"\nexport const getBasketTotal = (basket) => {\n  return basket?.reduce((amount, item) => amount + item.price, 0);\n};\nconst reducer = (state, action) => {\n  console.log(action);\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return {\n        ...state,\n        basket: [...state.basket, action.item],\n      };\n    case \"REMOVE_FROM_BASKET\":\n      const index = state.basket.findIndex(\n        (basketItem) => basketItem.id === action.id\n      );\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(\n          `Can't remove product (id: ${action.id}) as it does not exist in the basket`\n        );\n      }\n\n      return {\n        ...state,\n        basket: newBasket,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}