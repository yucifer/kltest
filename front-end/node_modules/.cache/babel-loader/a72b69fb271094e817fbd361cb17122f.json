{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/yash/Desktop/Clones/ecomm/front-end/src/Subtotal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport CurrencyFormat from \"react-currency-format\";\nimport \"./Subtotal.css\";\nimport { useStateValue } from \"./StateProvider\";\nimport { getBasketTotal } from \"./reducer\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Subtotal() {\n  _s();\n\n  const [order, setOrder] = useState();\n  const [totalPrice, setTotalPrice] = useState();\n  const history = useHistory();\n  const [{\n    basket\n  }, dispatch] = useStateValue();\n\n  const emptyBasket = () => {\n    if (basket.length === 0) {\n      return alert(\"Please add items in the cart first\");\n    }\n\n    setOrder(basket.map(product => {\n      return {\n        name: product.name,\n        unitPrice: product.unitPrice,\n        totalQuantity: product.quantity\n      };\n    }));\n    setTotalPrice(getBasketTotal(basket));\n    console.log(order);\n    console.log(totalPrice); //dispatch item into the data layer\n    // fetch(\"http://localhost:5000/orders\", {\n    //   method: \"post\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify({\n    //     order: order,\n    //     totalPrice: totalPrice,\n    //   }),\n    // })\n    //   .then((response) => a())\n    //   .catch((err) => console.log(err));\n    // dispatch({\n    //   type: \"EMPTY_BASKET\",\n    // });\n    // history.push(\"/orderplaced\");\n  };\n\n  const a = () => {\n    dispatch({\n      type: \"EMPTY_BASKET\"\n    });\n    history.push(\"/orderplaced\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subtotal\",\n    children: [/*#__PURE__*/_jsxDEV(CurrencyFormat, {\n      renderText: value => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Subtotal (\", basket === null || basket === void 0 ? void 0 : basket.length, \" items) : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false),\n      decimalScale: 2,\n      value: getBasketTotal(basket),\n      displayType: \"text\",\n      thousandSeperator: true,\n      prefix: \"₹\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: emptyBasket,\n      children: \"Place Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Subtotal, \"ketiDw0d1IOhsVtCrh4y/EvSUoo=\", false, function () {\n  return [useHistory, useStateValue];\n});\n\n_c = Subtotal;\nexport default Subtotal; // (e) => history.push(\"/orderplaced\")\n\nvar _c;\n\n$RefreshReg$(_c, \"Subtotal\");","map":{"version":3,"sources":["/Users/yash/Desktop/Clones/ecomm/front-end/src/Subtotal.js"],"names":["React","useState","CurrencyFormat","useStateValue","getBasketTotal","useHistory","Subtotal","order","setOrder","totalPrice","setTotalPrice","history","basket","dispatch","emptyBasket","length","alert","map","product","name","unitPrice","totalQuantity","quantity","console","log","a","type","push","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAO,gBAAP;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,EAAlC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,EAA5C;AACA,QAAMU,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAM,CAAC;AAAEO,IAAAA;AAAF,GAAD,EAAaC,QAAb,IAAyBV,aAAa,EAA5C;;AAEA,QAAMW,WAAW,GAAG,MAAM;AACxB,QAAIF,MAAM,CAACG,MAAP,KAAkB,CAAtB,EAAyB;AACvB,aAAOC,KAAK,CAAC,oCAAD,CAAZ;AACD;;AACDR,IAAAA,QAAQ,CACNI,MAAM,CAACK,GAAP,CAAYC,OAAD,IAAa;AACtB,aAAO;AACLC,QAAAA,IAAI,EAAED,OAAO,CAACC,IADT;AAELC,QAAAA,SAAS,EAAEF,OAAO,CAACE,SAFd;AAGLC,QAAAA,aAAa,EAAEH,OAAO,CAACI;AAHlB,OAAP;AAKD,KAND,CADM,CAAR;AAUAZ,IAAAA,aAAa,CAACN,cAAc,CAACQ,MAAD,CAAf,CAAb;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYf,UAAZ,EAhBwB,CAiBxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACD,GAjCD;;AAmCA,QAAMgB,CAAC,GAAG,MAAM;AACdZ,IAAAA,QAAQ,CAAC;AACPa,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGAf,IAAAA,OAAO,CAACgB,IAAR,CAAa,cAAb;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE,QAAC,cAAD;AACE,MAAA,UAAU,EAAGC,KAAD,iBACV;AAAA,+BACE;AAAA,mCACahB,MADb,aACaA,MADb,uBACaA,MAAM,CAAEG,MADrB,6BACsC;AAAA,sBAASa;AAAT;AAAA;AAAA;AAAA;AAAA,kBADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,uBAFJ;AAQE,MAAA,YAAY,EAAE,CARhB;AASE,MAAA,KAAK,EAAExB,cAAc,CAACQ,MAAD,CATvB;AAUE,MAAA,WAAW,EAAE,MAVf;AAWE,MAAA,iBAAiB,EAAE,IAXrB;AAYE,MAAA,MAAM,EAAE;AAZV;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AAAQ,MAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GApEQR,Q;UAGSD,U,EACeF,a;;;KAJxBG,Q;AAsET,eAAeA,QAAf,C,CAEA","sourcesContent":["import React, { useState } from \"react\";\nimport CurrencyFormat from \"react-currency-format\";\nimport \"./Subtotal.css\";\nimport { useStateValue } from \"./StateProvider\";\nimport { getBasketTotal } from \"./reducer\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Subtotal() {\n  const [order, setOrder] = useState();\n  const [totalPrice, setTotalPrice] = useState();\n  const history = useHistory();\n  const [{ basket }, dispatch] = useStateValue();\n\n  const emptyBasket = () => {\n    if (basket.length === 0) {\n      return alert(\"Please add items in the cart first\");\n    }\n    setOrder(\n      basket.map((product) => {\n        return {\n          name: product.name,\n          unitPrice: product.unitPrice,\n          totalQuantity: product.quantity,\n        };\n      })\n    );\n\n    setTotalPrice(getBasketTotal(basket));\n    console.log(order);\n    console.log(totalPrice);\n    //dispatch item into the data layer\n    // fetch(\"http://localhost:5000/orders\", {\n    //   method: \"post\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify({\n    //     order: order,\n    //     totalPrice: totalPrice,\n    //   }),\n    // })\n    //   .then((response) => a())\n    //   .catch((err) => console.log(err));\n\n    // dispatch({\n    //   type: \"EMPTY_BASKET\",\n    // });\n    // history.push(\"/orderplaced\");\n  };\n\n  const a = () => {\n    dispatch({\n      type: \"EMPTY_BASKET\",\n    });\n    history.push(\"/orderplaced\");\n  };\n\n  return (\n    <div className=\"subtotal\">\n      <CurrencyFormat\n        renderText={(value) => (\n          <>\n            <p>\n              Subtotal ({basket?.length} items) : <strong>{value}</strong>\n            </p>\n          </>\n        )}\n        decimalScale={2}\n        value={getBasketTotal(basket)}\n        displayType={\"text\"}\n        thousandSeperator={true}\n        prefix={\"₹\"}\n      />\n\n      <button onClick={emptyBasket}>Place Order</button>\n    </div>\n  );\n}\n\nexport default Subtotal;\n\n// (e) => history.push(\"/orderplaced\")\n"]},"metadata":{},"sourceType":"module"}